#!/bin/bash

set -e -x

# Note: This specific script was used in GitPod IDE in GitHub, change directory/path incase you'll use it.
# Note: This script is based/from thecatvoid's build script: https://github.com/thecatvoid/actions_kernel_build

# Setup missing packages (always, since it gitpod's instance always going back it its default state) 
sudo apt-get install flex bc cpio build-essential openssl libssl-dev libfl-dev -y

# Set HOME Path, it call your current root directory as your HOME dir.
HOME="${PWD}"

# Work Path, this will be your main working folder.
WORK="${HOME}/work"

# Kernel Source, this should be your kernel source repository and it's branch.
KERNEL_SOURCE_URL="https://github.com/Risti699/Project-KARA"
KERNEL_BRANCH="tmp"

# Kernel/Device Name, change it based on your device, of course.
KERNEL="Onclite"

# Kernel Source Path, this will be your kernel source directory after clone.
KERNEL_SRC="${WORK}/${KERNEL}"

# Clang URL - Change the version, depends on your kernel source.
CLANG_TAR_URL="https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android12-release/clang-r416183b.tar.gz"

# Utilities URL x86_x64 - Change it depends on your preference.
BINUTILS_x64="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9"
x64_BRANCH="android-12.1.0_r27"
BINUTILS_x32="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9"
x32_BRANCH="android12.1.0_r27"

# Prepare Directory
mkdir -p "${WORK}"
cd "${WORK}" || exit 1

# Cloning all the Necessary files
if [ ! -d .clang ]; then mkdir .clang && curl -Lsq "${CLANG_TAR_URL}" -o clang.tgz && tar -xzf clang.tgz -C .clang; fi
[ ! -d .binutils-64 ] && git clone --depth=1 "${BINUTILS_x64}" -b ${x64_BRANCH} .binutils-64
[ ! -d .binutils-32 ] && git clone --depth=1 "${BINUTILS_x32}" -b ${x32_BRANCH} .binutils-32
[ ! -d ${KERNEL} ] && git clone --depth=1 "${KERNEL_SOURCE_URL}" -b ${KERNEL_BRANCH} ${KERNEL}

# Setting Toolchain Path
PATH="${WORK}/.clang/bin:${WORK}/.binutils-64/bin:${WORK}/.binutils-32/bin:/bin:${PATH}"

# Preparing Build Process
cd "${KERNEL_SRC}" || exit 1

# Export Additional Information, change it all according to your wants.
export KBUILD_BUILD_HOST="${KERNEL}"
export KBUILD_BUILD_USER="PapiLer"

# Cleanup OUT Directory, in case there's already out folder.
rm -rf out
rm -rf build.log

# Create Make Function
make_fun() {
    make O=out ARCH=arm64 \
		CC=clang HOSTCC=clang \
		CLANG_TRIPLE=aarch64-linux-gnu- \
		CROSS_COMPILE=aarch64-linux-android- \
		CROSS_COMPILE_ARM32=arm-linux-androideabi- "$@" 
}

# Prepare _defconfig - Change it base on your choice in arm/../configs/
make_onc onclite-perf_defconfig

# Start Compiling Kernel with build.log
make_onc -j3 2>&1 | tee build.log
